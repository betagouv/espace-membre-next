name: Node.js CI

on: [push]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Setup PostgreSQL
              uses: Harmon758/postgresql-action@v1.0.0
              with:
                  postgresql db: postgres
                  postgresql user: postgres
                  postgresql password: postgres
            - run: npm install
            - run: npm run build --if-present
              env:
                  CI: true
                  FEATURE_SHOULD_SEND_MESSAGE_TO_AUTHOR: true
                  NEWSLETTER_HASH_SECRET: fakenewslettersecret
                  SHOULD_SEND_NL: true
                  OVH_APP_KEY: fakeovhkey
                  OVH_APP_SECRET: fakeovhsecret
                  OVH_CONSUMER_KEY: fakeconsumerkey
                  SESSION_SECRET: fakesessionsecret
                  CHAT_WEBHOOK_URL_SECRETARIAT: https://example.com
                  CHAT_WEBHOOK_URL_GENERAL: https://example.com
                  CHAT_WEBHOOK_URL_DINUM: https://example.com
                  CHAT_WEBHOOK_URL_GIP: https://example.com
                  MATTERMOST_BOT_TOKEN: faketoken
                  MATTERMOST_INVITE_ID: fakeid
                  MAIL_PASS: fakepass
                  MAIL_USER: fakeuser
                  MAIL_SENDER: fake@localhost
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
                  HOSTNAME: localhost
                  HASH_SALT: fakesaltfortestenv
                  GITHUB_FORK: dummy-github-fork
                  MAILING_LIST_NEWSLETTER: 0
                  REDIS_URL: "dummy-url"
                  GITHUB_CLIENT_ID: dumygithubclient
                  GITHUB_CLIENT_SECRET: dummygithubsecret
            - run: npm run test
              env:
                  CI: true
                  FEATURE_SHOULD_SEND_MESSAGE_TO_AUTHOR: true
                  NEWSLETTER_HASH_SECRET: fakenewslettersecret
                  SHOULD_SEND_NL: true
                  OVH_APP_KEY: fakeovhkey
                  OVH_APP_SECRET: fakeovhsecret
                  OVH_CONSUMER_KEY: fakeconsumerkey
                  SESSION_SECRET: fakesessionsecret
                  CHAT_WEBHOOK_URL_SECRETARIAT: https://example.com
                  CHAT_WEBHOOK_URL_GENERAL: https://example.com
                  CHAT_WEBHOOK_URL_DINUM: https://example.com
                  CHAT_WEBHOOK_URL_GIP: https://example.com
                  MATTERMOST_BOT_TOKEN: faketoken
                  MATTERMOST_INVITE_ID: fakeid
                  MAIL_PASS: fakepass
                  MAIL_USER: fakeuser
                  MAIL_SENDER: fake@localhost
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
                  HOSTNAME: localhost
                  HASH_SALT: fakesaltfortestenv
                  GITHUB_FORK: dummy-github-fork
                  MAILING_LIST_NEWSLETTER: 0
                  REDIS_URL: "dummy-url"
                  GITHUB_CLIENT_ID: dumygithubclient
                  GITHUB_CLIENT_SECRET: dummygithubsecret

    e2e:
        timeout-minutes: 30
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install dependencies
              run: npm ci
            - name: Start local environment with Docker Compose
              run: |
                  cp .env.test .env
                  docker compose up -d
                  yarn dev &
            - uses: cygnetdigital/wait_for_response@v2.0.0
              with:
                  url: "http://localhost:8100"
                  responseCode: "200"
                  timeout: 60000
                  interval: 1000
            - name: init DB
              run: |
                  yarn migrate
                  yarn seed
            - name: Install Playwright Browsers
              run: npx playwright install --with-deps
            - name: Run Playwright tests
              run: npx playwright test
            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
